#!/bin/bash
### to be placed in user path ~/bin/ and chmod +x
# required youtube-dl and screen for backgrounding
type pip >/dev/null || (echo "... Installing pip" && pkg update -y && pkg install python -y;)
type youtube-dl >/dev/null || (echo "... Installing youtube-dl" && pkg install ffmpeg -y && yes | pip install youtube-dl;)
# remove screen -S xxxx if not needed
type screen >/dev/null || (echo "... Installing screen" && pkg install screen -y;)

# Define your destination paths here :
_VIDEOS='/data/data/com.termux/files/home/storage/shared/youtube/%(title)s.%(ext)s'
_ABOOKS='/data/data/com.termux/files/home/storage/shared/Music/6-audiobooks/%(title)s.%(ext)s'
_ZIKS='/data/data/com.termux/files/home/storage/shared/Music/5-Newz/%(title)s.%(ext)s'

_MYECHO () { 
_DOTNUM=20;
if [ -z "$1" ]; then echo "<!> need argument"; return 1; fi
_CHAINL=$(echo $@ | wc -c)
_DOTL=$((_DOTNUM - _CHAINL))
echo -e "$@\c"
i=0
while [ "$i" -lt "$_DOTL" ]; do echo -e ".\c"; i=$((i+1)); done
return 0
}

### colors
_REZ="\e[0m"
_RDX="\e[1;31m"
_BLX="\e[1;34m"
_GRX="\e[1;32m"
_MVX="\e[1;95m"
_BLU () { echo -e "${_BLX}${@}${_REZ}" ; }
_RED () { echo -e "${_RDX}${@}${_REZ}" ; }
_GRN () { echo -e "${_GRX}${@}${_REZ}" ; }
_MAV () { echo -e "${_MVX}${@}${_REZ}" ; }
_OK () { echo -e "[${_GRX}OK${_REZ}${@}]" ; }
_KO () { echo -e "[${_RDX}KO${_REZ}${@}]" ; }

# 1st arg will be use as youtube url
clear
_URL=$1
grep -q "^http.*" <<< ${_URL} || exit 1

# Menu
_MAV "######################################"
_MAV "########### Youtube-DL v2.4 ##########"
_MAV "######################################"
_MAV "### url : ${_URL}"
_BLU "# Press : "
_MYECHO "[1] " && echo ' for Video'
_MYECHO "[2] " && echo ' for Video - format selection'
_MYECHO "[3] " && echo ' for Audiobooks'
_MYECHO "[Enter] " && echo ' for Music'
_MYECHO "[q] " && echo ' to quit'

# Main
read -p "> " -n 1 -r
while true; do
case "$REPLY" in
  1) echo "###########################"
echo '# Downloading video..'
  screen -S video youtube-dl --restrict-filenames -f best -o "${_VIDEOS}" ${_URL}
 break
  ;;
  2) echo "###########################"
echo '# Downloading video, detect format..'
    select _FORMATRAW in $(youtube-dl --list-formats ${_URL} |egrep -v 'only|^\[youtube|^\[info|^format'|awk '{print $1"_"$2"_"$3"_"$4}'); do
    _FORMAT=$(echo ${_FORMATRAW}|awk -F'_' '{print $1}')
    _FORMATINFO=$(echo ${_FORMATRAW}|awk -F'_' '{print $3}')
    echo "# Format = $_FORMATINFO"
    [ -z "$_FORMAT"] && { echo "> wrong format.."; echo && continue; }
    break
    done
  screen -S video youtube-dl --restrict-filenames -f ${_FORMAT} -o "${_VIDEOS}" ${_URL}
 break
  ;;
  3) echo "###########################"
  echo '# Downloading AudioBook file...'
  screen -S audiobook youtube-dl --restrict-filenames -f best -x --audio-format mp3 -o "${_ABOOKS}" ${_URL}
  break
  ;;
  q) echo "###########################"
  echo '..Exiting'
  exit
  ;;
  *) echo "###########################"
  echo 'Downloading mp3 file...'
  screen -S music youtube-dl --restrict-filenames -f best -x --audio-format mp3 -o "${_ZIKS}" ${_URL}
  break
  ;;
esac
done



