#!/bin/bash
### to be placed in user path ~/bin/ and chmod +x
# required yt-dlp and screen for backgrounding
type pip >/dev/null || (echo "... Installing pip" && pkg install python3;)
type yt-dlp >/dev/null || (echo "... Installing yt-dlp" && python3 -m pip install -U yt-dlp;)
# remove screen -S xxxx if not needed
type screen >/dev/null || (echo "... Installing screen" && pkg install screen;)

# Define your destination paths here :
_VIDEOS='/data/data/com.termux/files/home/storage/shared/youtube/%(title)s.%(ext)s'
_ABOOKS='/data/data/com.termux/files/home/storage/shared/Music/6-audiobooks/%(title)s.%(ext)s'
_ZIKS='/data/data/com.termux/files/home/storage/shared/Music/5-Newz/%(title)s.%(ext)s'

_MYECHO () { 
_DOTNUM=20;
if [ -z "$1" ]; then echo "<!> need argument"; return 1; fi
_CHAINL=$(echo $@ | wc -c)
_DOTL=$((_DOTNUM - _CHAINL))
echo -e "$@\c"
i=0
while [ "$i" -lt "$_DOTL" ]; do echo -e ".\c"; i=$((i+1)); done
return 0
}

### colors
_REZ="\e[0m"
_RDX="\e[1;31m"
_BLX="\e[1;34m"
_GRX="\e[1;32m"
_MVX="\e[1;95m"
_BLU () { echo -e "${_BLX}${@}${_REZ}" ; }
_RED () { echo -e "${_RDX}${@}${_REZ}" ; }
_GRN () { echo -e "${_GRX}${@}${_REZ}" ; }
_MAV () { echo -e "${_MVX}${@}${_REZ}" ; }
_OK () { echo -e "[${_GRX}OK${_REZ}${@}]" ; }
_KO () { echo -e "[${_RDX}KO${_REZ}${@}]" ; }

# 1st arg will be use as youtube url
clear
_URL=$1
grep -q "^http.*" <<< ${_URL} || exit 1

# Menu
_MAV "######################################"
_MAV "########### Youtube-DL v2.4 ##########"
_MAV "######################################"
_MAV "### url : ${_URL}"
_BLU "# Press : "
_MYECHO "[1] " && echo ' for Video (best format)'
_MYECHO "[2] " && echo ' for Video (select format)'
_MYECHO "[3] " && echo ' for Video (select name)'
_MYECHO "[4] " && echo ' for Audiobooks'
_MYECHO "[Enter] " && echo ' for Music'
_MYECHO "[q] " && echo ' to quit'

# function to select format of video file to DL
echo
_FORMATSELECT (){
local IFS="
"
select _FORMATIDLINE in $(yt-dlp --list-formats $_URL |egrep -v "^ID|------|only" |egrep 'mp4|webm' |awk '{print $1" "$2" @"$3" size="$6}'); do
_FORMATID=$(echo $_FORMATIDLINE |awk '{print $1}')
break
done
}

# Main
read -s -n 1 -r
while true; do
case "$REPLY" in
  1) echo "###########################"
  echo '# Downloading video..'
  screen yt-dlp --restrict-filenames -f best -o "${_VIDEOS}" ${_URL}
  break
  ;;
  2) echo "###########################"
  echo '# Downloading video, detect format..'
  _FORMATSELECT
  echo "# Format = $_FORMATIDLINE"
  [ -z "$_FORMATID"] && { echo "> wrong format.." && continue; }
  screen yt-dlp --restrict-filenames -f ${_FORMATID} -o "${_VIDEOS}" ${_URL}
  break
  ;;
  3) echo "###########################"
  echo '# Downloading video, choose output..'
  read -p "Filename: " _ONAME
  _OVIDEOS="/data/data/com.termux/files/home/storage/shared/youtube/${_ONAME}.%(ext)s"
  _FORMATSELECT
  screen yt-dlp --restrict-filenames -f ${_FORMATID} -o "${_OVIDEOS}" ${_URL}
  break
  ;;
  4) echo "###########################"
  echo '# Downloading AudioBook file...'
  screen yt-dlp --restrict-filenames -f best -x --audio-format mp3 -o "${_ABOOKS}" ${_URL}
  break
  ;;
  q) echo "###########################"
  echo '..Exiting'
  exit
  ;;
  *) echo "###########################"
  echo 'Downloading mp3 file...'
  screen -S music yt-dlp --restrict-filenames -f best -x --audio-format mp3 -o "${_ZIKS}" ${_URL}
  break
  ;;
esac
done

