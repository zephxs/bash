#!/bin/bash
### Youtube and other streaming sites Downloader script
### v2.4 - add Play option for launching VLC in Android
### v2.3 - move to pipx
### Replaced youtube-dl with yt-dlp for download speed
# to be placed in user path ~/bin/ and chmod +x

### REQUIREMENTS
# Define your destination paths here :
_VIDEOS='/data/data/com.termux/files/home/storage/shared/youtube/%(title)s.%(ext)s'
_ABOOKS='/data/data/com.termux/files/home/storage/shared/Music/6-audiobooks/%(title)s.%(ext)s'
_ZIKS='/data/data/com.termux/files/home/storage/shared/Music/5-Newz/%(title)s.%(ext)s'
_TMPFOLDER='/storage/emulated/0/tmpdl/'
_TMPFILE='/storage/emulated/0/tmpdl/%(title)s.%(ext)s'
# Test your paths
[ -d "$(dirname $_VIDEOS)" -o -d "$(dirname $_ABOOKS)" -o -d "$(dirname $_ZIKS)" ] || { echo "# Destination Folders not found, exit" && exit 1; } 

### AUTO INSTALLER / UPDATER for Termux
if type pkg >/dev/null ; then
# required pipx
type pipx >/dev/null || ( echo "... Installing pipx" && pkg install python3 && python3 -m pip install pipx; )
# install yt-dlp and update if folder than 15 days
find $(realpath $(type -P yt-dlp)) -mtime +15 -exec python3 -m pipx upgrade yt-dlp \; || python3 -m pipx install yt-dlp
fi

### FUNCTIONS
_MYECHO () { 
# Nicer output
_DOTNUM=24;
if [ -z "$1" ]; then echo "<!> need argument"; return 1; fi
_CHAINL=$(echo "$@" | wc -c)
_DOTL=$((_DOTNUM - _CHAINL))
i=0
echo -e "${@}\c"
while [ "$i" -lt "$_DOTL" ]; do echo -e ".\c"; i=$((i+1)); done
return 0
}

_FORMATSELECT (){
# function to select format of video file to DL
echo
_BLU "# Select Available Video Format:"
local IFS="
"
select _FORMATIDLINE in $(yt-dlp -n --list-formats "$_URL" | grep -Ev "^ID|------|only|^\[|image" | awk '{print $1" "$2" "$3" "$7" "$NF}'); do
  _FORMATID=$(awk '{print $1}' <<<$_FORMATIDLINE)
  _GRN "# Format = $_FORMATID"
  break
done
[ -z "$_FORMATID" ] && ( _RED "> wrong format.." && exit 1; )
}

# Colorize
_REZ="\e[0m"
_RDX="\e[1;31m"
_BLX="\e[1;34m"
_GRX="\e[1;32m"
_MVX="\e[1;95m"
_BLU () { echo -e "${_BLX}${@}${_REZ}" ; }
_RED () { echo -e "${_RDX}${@}${_REZ}" ; }
_GRN () { echo -e "${_GRX}${@}${_REZ}" ; }
_MAV () { echo -e "${_MVX}${@}${_REZ}" ; }
_OK () { echo -e "[${_GRX}OK${_REZ}${@}]" ; }
_KO () { echo -e "[${_RDX}KO${_REZ}${@}]" ; }


### MAIN
# 1st arg will be used as youtube url
clear
_URL=$1
grep -q "^http.*" <<< ${_URL} || exit 1
echo "$_URL - $(date '+')" >>$HOME/.yt-dlp.log
_MAV "######################################"
_MAV "########### Youtube-DL v2.4 ##########"
_MAV "######################################"
_MAV "### url : ${_URL}"
_BLU "# Press : "
_MYECHO "[1] " && echo ' for Video (best format)'
_MYECHO "[2] " && echo ' for Video (select format)'
_MYECHO "[3] " && echo ' for Video (select name)'
_MYECHO "[4] " && echo ' for Audiobooks'
_MYECHO "[p] " && echo ' for Playing file with VLC'
_MYECHO "[Enter] " && echo ' for Music'
_MYECHO "[q] " && echo ' to quit'
echo
read -s -n 1 -r
while true; do
case "$REPLY" in
 1) _BLU "######################################"
  _BLU '# Video - Downloading..'
  yt-dlp -n -t mp4 --restrict-filenames -o "${_VIDEOS}" ${_URL}
  break
  ;;
 2) _BLU "######################################"
  _BLU '# Video - Detecting Format..'
  _FORMATSELECT
  yt-dlp -n -t mp4 --restrict-filenames -f ${_FORMATID} -o "${_VIDEOS}" ${_URL}
  break
  ;;
 3) _BLU "######################################"
  _BLU '# Video - Choose Name..'
  read -p "Filename: " _ONAME
  _OVIDEOS="/data/data/com.termux/files/home/storage/shared/youtube/${_ONAME}.%(ext)s"
  _FORMATSELECT
  yt-dlp -n -t mp4 --restrict-filenames -f ${_FORMATID} -o "${_OVIDEOS}" ${_URL}
  break
  ;;
 4) _BLU "######################################"
  _BLU '# AudioBook - Downloading..'
  yt-dlp -n --restrict-filenames -x --audio-format mp3 -o "${_ABOOKS}" ${_URL}
  break
  ;;
 p) _BLU "######################################"
  [ -d "$_TMPFOLDER" ] || mkdir -p "$_TMPFOLDER"
  if [ "$(ls $_TMPFOLDER |wc -l)" -ne 0 ]; then
    rm -rf "${_TMPFOLDER}/*"
  fi
  _BLU '# Read and delete'
  yt-dlp -n --restrict-filenames -o "${_TMPFILE}" ${_URL}
  if [ "$(ls $_TMPFOLDER |wc -l)" = 1 ]; then
    _PLAYFILE=$(ls "$_TMPFOLDER")
    _BLU "# Playing $_PLAYFILE"
    am start -n org.videolan.vlc/org.videolan.vlc.gui.video.VideoPlayerActivity -d /storage/emulated/0/tmpdl/$_PLAYFILE
  else
    _RED "> more than one file in folder, retry.."
    rm -rf "${_TMPFOLDER}/*"
  fi
  break
  ;;
 q) _BLU "######################################"
  _RED '..Exiting'
  exit
  ;;
 *) _BLU "######################################"
  _BLU '# MP3 - Downloading..'
  yt-dlp --restrict-filenames -x --audio-format mp3 -o "${_ZIKS}" ${_URL}
  break
  ;;
esac
done

